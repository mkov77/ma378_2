renv::init()
renv::init()
install.packages("renv")
renv::init()
renv::snapshot()
quarto render
reticulate::repl_python()
reticulate::repl_python()
from vetiver import VetiverModel
# Assuming 'model' is your trained model and 'X' is your feature data
v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
python api_server.py
quarto render model.qmd
reticulate::repl_python()
reticulate::repl_python()
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
from pins import board_folder
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
from pins import board_folder
df = penguins.load_penguins().dropna()
df.head(3)
X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)
y = df['body_mass_g']
model = LinearRegression().fit(X, y)
print(f"R^2 {model.score(X,y)}")
print(f"Intercept {model.intercept_}")
print(f"Columns {X.columns}")
print(f"Coefficients {model.coef_}")
from vetiver import VetiverModel
v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
b = board_folder('data/model')
b.pin_write(v, 'penguin_model')
import pickle
# Save the model to a file
with open('penguin_model.pkl', 'wb') as file:
pickle.dump(model, file)
from pins import board_folder
# Assuming the board_folder has been set up correctly
b = board_folder('data/model')
# Pin the model file
b.pin_upload('penguin_model.pkl', name='penguin_model')
reticulate::repl_python()
from pins import board_folder
# Assuming the board_folder has been set up correctly
b = board_folder('data/model')
# Pin the model file
b.pin_upload('penguin_model.pkl', name='penguin_model')
app = VetiverAPI(v, check_prototype=True)
from vetiver import VetiverModel
v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
import pickle
# Save the model to a file
with open('penguin_model.pkl', 'wb') as file:
pickle.dump(model, file)
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
from pins import board_folder
df = penguins.load_penguins().dropna()
df.head(3)
X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)
y = df['body_mass_g']
model = LinearRegression().fit(X, y)
print(f"R^2 {model.score(X,y)}")
print(f"Intercept {model.intercept_}")
print(f"Columns {X.columns}")
print(f"Coefficients {model.coef_}")
from vetiver import VetiverModel
v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
import pickle
# Save the model to a file
with open('penguin_model.pkl', 'wb') as file:
pickle.dump(model, file)
from pins import board_folder
# Assuming the board_folder has been set up correctly
b = board_folder('data/model')
# Pin the model file
b.pin_upload('penguin_model.pkl', name='penguin_model')
app = VetiverAPI(v, check_prototype=True)
b.pin_upload('penguin_model.pkl', name='penguin_model')
reticulate::repl_python()
if __name__ == "__main__":
docker run --rm -d \
-p 8080:8080 \
--name penguin-model \
-v /path/to/your/local/data/model:/data/model \
penguin-model
docker run --rm -d \
-p 8080:8080 \
--name penguin-model
docker run
docker run --rm
docker pm
docker run --rm -d \
-p 8080:8080 \
--name penguin-model \
penguin-model
v = VetiverModel.from_pin(b, 'penguin_model', version = '20240313T194757Z-a65ed')
vetiver_api = vetiver.VetiverAPI(v)
api = vetiver_api.app
import uvicorn
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
from pins import board_folder
df = penguins.load_penguins().dropna()
df.head(3)
X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)
y = df['body_mass_g']
model = LinearRegression().fit(X, y)
print(f"R^2 {model.score(X,y)}")
print(f"Intercept {model.intercept_}")
print(f"Columns {X.columns}")
print(f"Coefficients {model.coef_}")
from vetiver import VetiverModel
v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
import pickle
# Save the model to a file
with open('penguin_model.pkl', 'wb') as file:
pickle.dump(model, file)
from pins import board_folder
# Assuming the board_folder has been set up correctly
b = board_folder('data/model')
# Pin the model file
b.pin_upload('penguin_model.pkl', name='penguin_model')
v = VetiverModel.from_pin(b, 'penguin_model', version = '20240313T194757Z-a65ed')
renv::init()
